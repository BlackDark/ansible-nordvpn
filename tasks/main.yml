---
# tasks file for nordvpn

- name: Setting NordVPN base URL
  set_fact:
    baseurl: https://repo.nordvpn.com

- name: Setup NordVPN DNF repo key
  ansible.builtin.rpm_key:
    state: present
    key: "{{ baseurl }}/gpg/nordvpn_public.asc"
  when: ansible_facts.distribution == "CentOS"
  become: true

- name: Setup NordVPN DNF repo
  yum_repository:
    name: NordVPN
    description: NordVPN repo
    baseurl: "{{ baseurl }}/yum/nordvpn/centos/$basearch/"
  when: ansible_facts.distribution == "CentOS"
  become: true

- name: Add an Apt signing key
  ansible.builtin.apt_key:
    url: "{{ baseurl }}/gpg/nordvpn_public.asc"
    state: present
  when: ansible_facts.distribution == "Ubuntu"
  become: true

- name: Add specified repository into sources list
  ansible.builtin.apt_repository:
    repo: "deb {{ baseurl }}/deb/nordvpn/debian stable main"
    state: present
  when: ansible_facts.distribution == "Ubuntu"
  become: true

- name: Install NordVPN
  package:
    name: nordvpn
    state: latest
  become: true

- name: Collect NordVPN info
  nordvpn_info:
  register: nordvpn_info
  become: true

- name: Login
  ansible.builtin.command: /usr/bin/nordvpn login --username {{ username }} --password {{ password }}
  when: login == true and nordvpn_info["account"]["email"] != username
  become: true

- name: Set autoconnect
  ansible.builtin.command: /usr/bin/nordvpn set autoconnect {{ auto_connect }}
  when: auto_connect != nordvpn_info["settings"]["auto_connect"]
  become: true

- name: Set autoconnect server
  ansible.builtin.command: /usr/bin/nordvpn set autoconnect enabled {{ auto_connect_host }}
  when: auto_connect_host != ""
  become: true

- name: Set cyber_sec
  ansible.builtin.command: /usr/bin/nordvpn set cybersec {{ cyber_sec }}
  when: cyber_sec != nordvpn_info["settings"]["cyber_sec"]
  become: true

- name: Set dns
  ansible.builtin.command: /usr/bin/nordvpn set dns {{ dns }}
  when: dns != nordvpn_info["settings"]["dns"]
  become: true

- name: Set firewall
  ansible.builtin.command: /usr/bin/nordvpn set firewall {{ firewall }}
  when: firewall != nordvpn_info["settings"]["firewall"]
  become: true

- name: Set ipv6
  ansible.builtin.command: /usr/bin/nordvpn set ipv6 {{ ipv6 }}
  when: ipv6 != nordvpn_info["settings"]["ipv6"]
  become: true

- name: Set notify
  ansible.builtin.command: /usr/bin/nordvpn set notify {{ notifications }}
  when: notifications != nordvpn_info["settings"]["notify"]
  become: true

- name: Set technology
  ansible.builtin.command: /usr/bin/nordvpn set technology {{ technology }}
  when: technology != nordvpn_info["settings"]["technology"]
  become: true

- name: Set protocol
  ansible.builtin.command: /usr/bin/nordvpn set protocol {{ protocol }}
  when: protocol != nordvpn_info["settings"]["protocol"] and technology == "OpenVPN"
  become: true

- name: Add missing ports to the white list
  ansible.builtin.command: /usr/bin/nordvpn whitelist add port {{ item }}
  loop: "{{ whitelisted_ports }}"
  when: item not in nordvpn_info["settings"]["whitelisted_ports"]
  become: true

- name: Remove unnneeded ports from the white list
  ansible.builtin.command: /usr/bin/nordvpn whitelist remove port {{ item }}
  loop: '{{ nordvpn_info["settings"]["whitelisted_ports"] }}'
  when: item not in whitelisted_ports
  become: true

- name: Add missing subnets to the white list
  ansible.builtin.command: /usr/bin/nordvpn whitelist add subnet {{ item }}
  loop: "{{ whitelisted_subnets }}"
  when: item not in nordvpn_info["settings"]["whitelisted_subnets"]
  become: true

- name: Remove unnneeded subnets from the white list
  ansible.builtin.command: /usr/bin/nordvpn whitelist remove subnet {{ item }}
  loop: '{{ nordvpn_info["settings"]["whitelisted_subnets"] }}'
  when: item not in whitelisted_subnets
  become: true

- name: Set killswitch
  ansible.builtin.command: /usr/bin/nordvpn set killswitch {{ kill_switch }}
  when: kill_switch != nordvpn_info["settings"]["kill_switch"]
  become: true

- name: Collect NordVPN info2
  nordvpn_info:
  register: nordvpn_info2
  become: true

- name: Disconnect if settings changed
  ansible.builtin.command: /usr/bin/nordvpn disconnect
  when: nordvpn_info2["settings"] != nordvpn_info["settings"]
  become: true

- name: Connect if it was connected or it needs to connect
  ansible.builtin.command: /usr/bin/nordvpn connect {{ server }}
  when: (nordvpn_info2["settings"] != nordvpn_info["settings"] and nordvpn_info["status"]["status"] == "Connected") or (connect == True and nordvpn_info["status"]["status"] != "Connected")
  become: true
